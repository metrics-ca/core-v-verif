###############################################################################
#
# Copyright 2020 OpenHW Group
#
# Licensed under the Solderpad Hardware Licence, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://solderpad.org/licenses/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0 WITH SHL-2.0
#
###############################################################################
# This is a basic workflow to get core-v-verif started with GitHub Actions.
# It initiates a regression on the Metrics platform and waits for the result
# of the regression. If all tests pass, the action succeeds.
# In the near future this will be expanded to support multiple development
# branches, each with its own pull and/or pull-request regression.
#
# Stolen, without the slightest hint of shame, from Aimee Sutton.

name: metrics-ci-sanity

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, cv32e40p/dev, cv32e40x/dev ]
#  pull_request_target:
#    branches: [ master ]

# If you fork this repository, you must create a new Metrics project for your fork
# and set the environment variable $METRICS_PROJECT_ID accordingly

env:
     METRICS_CI_TOKEN: ${{ secrets.METRICS_CI_TOKEN }}
     METRICS_PROJECT_ID: ${{ secrets.METRICS_PROJECT_ID }}
     PR_NUMBER: ${{ github.event.pull_request.number }}
	  
jobs:
  cv32e40p_ci_check:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/cv32e40p/dev'
    steps:
      - uses: actions/checkout@v2
      - run: ./bin/metrics-regress cv32e40p_ci_check_regression ${{ env.METRICS_PROJECT_ID }}
    shell: bash
  cv32e40x_ci_check:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/cv32e40x/dev'
    steps:
      - uses: actions/checkout@v2
      - run: ./bin/metrics-regress cv32e40x_ci_check_regression ${{ env.METRICS_PROJECT_ID }}
    shell: bash

